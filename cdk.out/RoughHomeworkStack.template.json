{
 "Resources": {
  "HelloLambdaServiceRoleE071F162": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/HelloLambda/ServiceRole/Resource"
   }
  },
  "HelloLambda3D9C82D6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2849533a44759cd5762ea77402266bd3b146bca063fbf2fa2098d822fe1f11d0.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "HelloLambdaServiceRoleE071F162",
      "Arn"
     ]
    },
    "Handler": "lambda-function.handler",
    "Runtime": "nodejs10.x"
   },
   "DependsOn": [
    "HelloLambdaServiceRoleE071F162"
   ],
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/HelloLambda/Resource",
    "aws:asset:path": "asset.2849533a44759cd5762ea77402266bd3b146bca063fbf2fa2098d822fe1f11d0",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "newOrderServiceRole0EF5CC83": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/newOrder/ServiceRole/Resource"
   }
  },
  "newOrder9C6E636A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2849533a44759cd5762ea77402266bd3b146bca063fbf2fa2098d822fe1f11d0.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "newOrderServiceRole0EF5CC83",
      "Arn"
     ]
    },
    "Handler": "lambda-function.newOrder",
    "Runtime": "nodejs10.x"
   },
   "DependsOn": [
    "newOrderServiceRole0EF5CC83"
   ],
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/newOrder/Resource",
    "aws:asset:path": "asset.2849533a44759cd5762ea77402266bd3b146bca063fbf2fa2098d822fe1f11d0",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "exampleapi2D2ED469": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Example API"
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/example-api/Resource"
   }
  },
  "exampleapiDeploymentA1494E3B64d02fd9ca8c40d65898cc1aae891d84": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "exampleapi2D2ED469"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "exampleapihelloGET283B9A10",
    "exampleapihello9FEE94A5",
    "exampleapineworderGET18F49A6B",
    "exampleapineworderFC94C1B0"
   ],
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/example-api/Deployment/Resource"
   }
  },
  "exampleapiDeploymentStageprodE9D13C13": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "exampleapi2D2ED469"
    },
    "DeploymentId": {
     "Ref": "exampleapiDeploymentA1494E3B64d02fd9ca8c40d65898cc1aae891d84"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/example-api/DeploymentStage.prod/Resource"
   }
  },
  "exampleapihello9FEE94A5": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "exampleapi2D2ED469",
      "RootResourceId"
     ]
    },
    "PathPart": "hello",
    "RestApiId": {
     "Ref": "exampleapi2D2ED469"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/example-api/Default/hello/Resource"
   }
  },
  "exampleapihelloGETApiPermissionRoughHomeworkStackexampleapi9DB15276GEThelloC366EA4A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HelloLambda3D9C82D6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "exampleapi2D2ED469"
       },
       "/",
       {
        "Ref": "exampleapiDeploymentStageprodE9D13C13"
       },
       "/GET/hello"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/example-api/Default/hello/GET/ApiPermission.RoughHomeworkStackexampleapi9DB15276.GET..hello"
   }
  },
  "exampleapihelloGETApiPermissionTestRoughHomeworkStackexampleapi9DB15276GEThelloCD362683": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HelloLambda3D9C82D6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "exampleapi2D2ED469"
       },
       "/test-invoke-stage/GET/hello"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/example-api/Default/hello/GET/ApiPermission.Test.RoughHomeworkStackexampleapi9DB15276.GET..hello"
   }
  },
  "exampleapihelloGET283B9A10": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "exampleapihello9FEE94A5"
    },
    "RestApiId": {
     "Ref": "exampleapi2D2ED469"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "HelloLambda3D9C82D6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/example-api/Default/hello/GET/Resource"
   }
  },
  "exampleapineworderFC94C1B0": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "exampleapi2D2ED469",
      "RootResourceId"
     ]
    },
    "PathPart": "new-order",
    "RestApiId": {
     "Ref": "exampleapi2D2ED469"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/example-api/Default/new-order/Resource"
   }
  },
  "exampleapineworderGETApiPermissionRoughHomeworkStackexampleapi9DB15276GETneworder7CCF0061": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "newOrder9C6E636A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "exampleapi2D2ED469"
       },
       "/",
       {
        "Ref": "exampleapiDeploymentStageprodE9D13C13"
       },
       "/GET/new-order"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/example-api/Default/new-order/GET/ApiPermission.RoughHomeworkStackexampleapi9DB15276.GET..new-order"
   }
  },
  "exampleapineworderGETApiPermissionTestRoughHomeworkStackexampleapi9DB15276GETneworder73A64C0D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "newOrder9C6E636A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "exampleapi2D2ED469"
       },
       "/test-invoke-stage/GET/new-order"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/example-api/Default/new-order/GET/ApiPermission.Test.RoughHomeworkStackexampleapi9DB15276.GET..new-order"
   }
  },
  "exampleapineworderGET18F49A6B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "exampleapineworderFC94C1B0"
    },
    "RestApiId": {
     "Ref": "exampleapi2D2ED469"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "newOrder9C6E636A",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/example-api/Default/new-order/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VP207DMAz9lr2nhjKEeN1FvE1D4wOmLDHFa5NUtcM0Vf13knSI8XQuOT52nuBlCfVCX7gytq06OsH4Idq0KlnHsdPuZDWMb9EboeDV5tPf83ccHDEnNSnSDsZD6DA/ZJwUL4+aGYVhlSFpWEfToqw1o9I9NVrwoq9pDllWPZXRG91i34WrQy/ZvVPpvqYsmUnKhzgYLJ2/4lY08x3KV7DZmtk0/eXKYbmIfJMT+yh9lH/jiW+CtyTlmz5YhDM/fNevUD/D4+LMRNUQvZBDOMz4A51l4PlXAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "RoughHomeworkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "exampleapiEndpoint9C2B6BF5": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "exampleapi2D2ED469"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "exampleapiDeploymentStageprodE9D13C13"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}